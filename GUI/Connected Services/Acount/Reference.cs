//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.Acount {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Acount.AccountServicersSoap")]
    public interface AccountServicersSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAcount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllAcount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAcount", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllAcountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Insert(string userName, string displayName, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertAsync(string userName, string displayName, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Delete(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResetPassword(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ResetPasswordAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateInformation(string userName, string displayName, string password, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInformation", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateInformationAsync(string userName, string displayName, string password, string newPass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AccountServicersSoapChannel : GUI.Acount.AccountServicersSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServicersSoapClient : System.ServiceModel.ClientBase<GUI.Acount.AccountServicersSoap>, GUI.Acount.AccountServicersSoap {
        
        public AccountServicersSoapClient() {
        }
        
        public AccountServicersSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServicersSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServicersSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServicersSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAllAcount() {
            return base.Channel.GetAllAcount();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllAcountAsync() {
            return base.Channel.GetAllAcountAsync();
        }
        
        public bool Insert(string userName, string displayName, int type) {
            return base.Channel.Insert(userName, displayName, type);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAsync(string userName, string displayName, int type) {
            return base.Channel.InsertAsync(userName, displayName, type);
        }
        
        public bool Delete(string userName) {
            return base.Channel.Delete(userName);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string userName) {
            return base.Channel.DeleteAsync(userName);
        }
        
        public bool ResetPassword(string userName) {
            return base.Channel.ResetPassword(userName);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPasswordAsync(string userName) {
            return base.Channel.ResetPasswordAsync(userName);
        }
        
        public bool UpdateInformation(string userName, string displayName, string password, string newPass) {
            return base.Channel.UpdateInformation(userName, displayName, password, newPass);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInformationAsync(string userName, string displayName, string password, string newPass) {
            return base.Channel.UpdateInformationAsync(userName, displayName, password, newPass);
        }
    }
}
