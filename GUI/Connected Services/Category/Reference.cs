//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.Category {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Category.CategoryServicersSoap")]
    public interface CategoryServicersSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertCategory(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertCategoryAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateCategory(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateCategoryAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeteleCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeteleCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeteleCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeteleCategoryAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CategoryServicersSoapChannel : GUI.Category.CategoryServicersSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryServicersSoapClient : System.ServiceModel.ClientBase<GUI.Category.CategoryServicersSoap>, GUI.Category.CategoryServicersSoap {
        
        public CategoryServicersSoapClient() {
        }
        
        public CategoryServicersSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryServicersSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServicersSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServicersSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAllCategory() {
            return base.Channel.GetAllCategory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllCategoryAsync() {
            return base.Channel.GetAllCategoryAsync();
        }
        
        public bool InsertCategory(string name) {
            return base.Channel.InsertCategory(name);
        }
        
        public System.Threading.Tasks.Task<bool> InsertCategoryAsync(string name) {
            return base.Channel.InsertCategoryAsync(name);
        }
        
        public bool UpdateCategory(int id, string name) {
            return base.Channel.UpdateCategory(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCategoryAsync(int id, string name) {
            return base.Channel.UpdateCategoryAsync(id, name);
        }
        
        public bool DeteleCategory(int id) {
            return base.Channel.DeteleCategory(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeteleCategoryAsync(int id) {
            return base.Channel.DeteleCategoryAsync(id);
        }
    }
}
